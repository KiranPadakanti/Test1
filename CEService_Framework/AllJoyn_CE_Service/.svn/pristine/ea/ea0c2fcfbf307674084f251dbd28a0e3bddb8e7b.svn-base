#include "VendorServiceListenerImpl.h"
#include <alljoyn/CECTransport.h>

#include <iostream>

using namespace ajn;
using namespace services;

VendorServiceListenerImpl::VendorServiceListenerImpl(
		CommonBusListener& busListener) :
		VendorService::Listener(), m_BusListener(&busListener) {
}

QStatus VendorServiceListenerImpl::VendorSendCECommandCallback(
		unsigned int command, unsigned int la) {
	std::cout << "Received Command " << "(0x" << std::hex << command << ")"
			<< std::endl;
	std::cout << "Logical Address: " << la << std::endl;
	cec_command cecCommand;
	CECTransport* cecPtr = CECTransport::getCecInstance();
	// Always sending the command from TV to destination.
	cecCommand.initiator = (cec_logical_address) CECDEVICE_TV;
	cecCommand.destination = (cec_logical_address) la;
	cecCommand.opcode = (cec_opcode) CEC_OPCODE_USER_CONTROL_PRESSED;
	cecCommand.parameters.size = 1;
	cecCommand.parameters.data[0] = command & 0xFF;
	cecCommand.opcode_set = 1;

	// Transmit command to Vendor Application
	cecPtr->SendCecMesg(cecCommand);
	cecCommand.opcode = (cec_opcode) CEC_OPCODE_USER_CONTROL_RELEASE;
	// Transmit command to Vendor Application
	cecPtr->SendCecMesg(cecCommand);

	return ER_OK;
}

VendorServiceListenerImpl::~VendorServiceListenerImpl() {

}
